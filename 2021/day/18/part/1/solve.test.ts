import solve from "./solve.ts";

import { assertEquals } from "std/testing/asserts.ts";

Deno.test("[[1,2],[[3,4],5]]", expect(143));
Deno.test("[[[[0,7],4],[[7,8],[6,0]]],[8,1]]", expect(1384));
Deno.test("[[[[1,1],[2,2]],[3,3]],[4,4]]", expect(445));
Deno.test("[[[[3,0],[5,3]],[4,4]],[5,5]]", expect(791));
Deno.test("[[[[5,0],[7,4]],[5,5]],[6,6]]", expect(1137));
Deno.test(
  "[[[[8,7],[7,7]],[[8,6],[7,7]]],[[[0,7],[6,6]],[8,7]]]",
  expect(3488),
);

function expect(expected: unknown) {
  return (t: Deno.TestContext) => {
    assertEquals(solve(t.name), expected);
  };
}

Deno.test("example", () => {
  const input = `[[[0,[5,8]],[[1,7],[9,6]]],[[4,[1,2]],[[1,4],2]]]
[[[5,[2,8]],4],[5,[[9,9],0]]]
[6,[[[6,2],[5,6]],[[7,6],[4,7]]]]
[[[6,[0,7]],[0,9]],[4,[9,[9,0]]]]
[[[7,[6,4]],[3,[1,3]]],[[[5,5],1],9]]
[[6,[[7,3],[3,2]]],[[[3,8],[5,7]],4]]
[[[[5,4],[7,7]],8],[[8,3],8]]
[[9,3],[[9,9],[6,[4,9]]]]
[[2,[[7,7],7]],[[5,8],[[9,3],[0,2]]]]
[[[[5,2],5],[8,[3,7]]],[[5,[7,5]],[4,4]]]`;

  assertEquals(solve(input), 4140);
});
